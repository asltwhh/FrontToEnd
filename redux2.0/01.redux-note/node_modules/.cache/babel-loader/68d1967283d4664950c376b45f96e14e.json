{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Align from 'rmc-align';\nimport Animate from 'rc-animate';\nimport PopupInner from './PopupInner';\nimport LazyRenderBox from './LazyRenderBox';\nimport { saveRef } from './utils';\n\nvar Popup = function (_Component) {\n  _inherits(Popup, _Component);\n\n  function Popup(props) {\n    _classCallCheck(this, Popup);\n\n    var _this = _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this, props));\n\n    _this.onAlign = function (popupDomNode, align) {\n      var props = _this.props;\n      var currentAlignClassName = props.getClassNameFromAlign(align); // FIX: https://github.com/react-component/trigger/issues/56\n      // FIX: https://github.com/react-component/tooltip/issues/79\n\n      if (_this.currentAlignClassName !== currentAlignClassName) {\n        _this.currentAlignClassName = currentAlignClassName;\n        popupDomNode.className = _this.getClassName(currentAlignClassName);\n      }\n\n      props.onAlign(popupDomNode, align);\n    };\n\n    _this.getTarget = function () {\n      return _this.props.getRootDomNode();\n    };\n\n    _this.savePopupRef = saveRef.bind(_this, 'popupInstance');\n    _this.saveAlignRef = saveRef.bind(_this, 'alignInstance');\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.rootNode = this.getPopupDomNode();\n    }\n  }, {\n    key: 'getPopupDomNode',\n    value: function getPopupDomNode() {\n      return ReactDOM.findDOMNode(this.popupInstance);\n    }\n  }, {\n    key: 'getMaskTransitionName',\n    value: function getMaskTransitionName() {\n      var props = this.props;\n      var transitionName = props.maskTransitionName;\n      var animation = props.maskAnimation;\n\n      if (!transitionName && animation) {\n        transitionName = props.prefixCls + '-' + animation;\n      }\n\n      return transitionName;\n    }\n  }, {\n    key: 'getTransitionName',\n    value: function getTransitionName() {\n      var props = this.props;\n      var transitionName = props.transitionName;\n\n      if (!transitionName && props.animation) {\n        transitionName = props.prefixCls + '-' + props.animation;\n      }\n\n      return transitionName;\n    }\n  }, {\n    key: 'getClassName',\n    value: function getClassName(currentAlignClassName) {\n      return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;\n    }\n  }, {\n    key: 'getPopupElement',\n    value: function getPopupElement() {\n      var savePopupRef = this.savePopupRef,\n          props = this.props;\n      var align = props.align,\n          style = props.style,\n          visible = props.visible,\n          prefixCls = props.prefixCls,\n          destroyPopupOnHide = props.destroyPopupOnHide;\n      var className = this.getClassName(this.currentAlignClassName || props.getClassNameFromAlign(align));\n      var hiddenClassName = prefixCls + '-hidden';\n\n      if (!visible) {\n        this.currentAlignClassName = null;\n      }\n\n      var newStyle = _extends({}, style, this.getZIndexStyle());\n\n      var popupInnerProps = {\n        className: className,\n        prefixCls: prefixCls,\n        ref: savePopupRef,\n        style: newStyle\n      };\n\n      if (destroyPopupOnHide) {\n        return React.createElement(Animate, {\n          component: '',\n          exclusive: true,\n          transitionAppear: true,\n          onAnimateLeave: props.onAnimateLeave,\n          transitionName: this.getTransitionName()\n        }, visible ? React.createElement(Align, {\n          target: this.getTarget,\n          key: 'popup',\n          ref: this.saveAlignRef,\n          monitorWindowResize: true,\n          align: align,\n          onAlign: this.onAlign\n        }, React.createElement(PopupInner, _extends({\n          visible: true\n        }, popupInnerProps), props.children)) : null);\n      }\n\n      var alignOtherProps = {\n        xVisible: visible\n      };\n      return React.createElement(Animate, {\n        component: '',\n        exclusive: true,\n        transitionAppear: true,\n        transitionName: this.getTransitionName(),\n        onAnimateLeave: props.onAnimateLeave,\n        showProp: 'xVisible'\n      }, React.createElement(Align, _extends({\n        target: this.getTarget,\n        key: 'popup',\n        ref: this.saveAlignRef,\n        monitorWindowResize: true\n      }, alignOtherProps, {\n        childrenProps: {\n          visible: 'xVisible'\n        },\n        disabled: !visible,\n        align: align,\n        onAlign: this.onAlign\n      }), React.createElement(PopupInner, _extends({\n        hiddenClassName: hiddenClassName\n      }, popupInnerProps), props.children)));\n    }\n  }, {\n    key: 'getZIndexStyle',\n    value: function getZIndexStyle() {\n      var style = {};\n      var props = this.props;\n\n      if (props.zIndex !== undefined) {\n        style.zIndex = props.zIndex;\n      }\n\n      return style;\n    }\n  }, {\n    key: 'getMaskElement',\n    value: function getMaskElement() {\n      var props = this.props;\n      var maskElement = void 0;\n\n      if (props.mask) {\n        var maskTransition = this.getMaskTransitionName();\n        maskElement = React.createElement(LazyRenderBox, {\n          style: this.getZIndexStyle(),\n          key: 'mask',\n          className: props.prefixCls + '-mask',\n          hiddenClassName: props.prefixCls + '-mask-hidden',\n          visible: props.visible\n        });\n\n        if (maskTransition) {\n          maskElement = React.createElement(Animate, {\n            key: 'mask',\n            showProp: 'visible',\n            transitionAppear: true,\n            component: '',\n            transitionName: maskTransition\n          }, maskElement);\n        }\n      }\n\n      return maskElement;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('div', null, this.getMaskElement(), this.getPopupElement());\n    }\n  }]);\n\n  return Popup;\n}(Component);\n\nexport default Popup;","map":{"version":3,"sources":["E:/mycode/redux-note/node_modules/rmc-trigger/es/Popup.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","Component","ReactDOM","Align","Animate","PopupInner","LazyRenderBox","saveRef","Popup","_Component","props","_this","__proto__","Object","getPrototypeOf","call","onAlign","popupDomNode","align","currentAlignClassName","getClassNameFromAlign","className","getClassName","getTarget","getRootDomNode","savePopupRef","bind","saveAlignRef","key","value","componentDidMount","rootNode","getPopupDomNode","findDOMNode","popupInstance","getMaskTransitionName","transitionName","maskTransitionName","animation","maskAnimation","prefixCls","getTransitionName","getPopupElement","style","visible","destroyPopupOnHide","hiddenClassName","newStyle","getZIndexStyle","popupInnerProps","ref","createElement","component","exclusive","transitionAppear","onAnimateLeave","target","monitorWindowResize","children","alignOtherProps","xVisible","showProp","childrenProps","disabled","zIndex","undefined","getMaskElement","maskElement","mask","maskTransition","render"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Align from 'rmc-align';\nimport Animate from 'rc-animate';\nimport PopupInner from './PopupInner';\nimport LazyRenderBox from './LazyRenderBox';\nimport { saveRef } from './utils';\n\nvar Popup = function (_Component) {\n    _inherits(Popup, _Component);\n\n    function Popup(props) {\n        _classCallCheck(this, Popup);\n\n        var _this = _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this, props));\n\n        _this.onAlign = function (popupDomNode, align) {\n            var props = _this.props;\n            var currentAlignClassName = props.getClassNameFromAlign(align);\n            // FIX: https://github.com/react-component/trigger/issues/56\n            // FIX: https://github.com/react-component/tooltip/issues/79\n            if (_this.currentAlignClassName !== currentAlignClassName) {\n                _this.currentAlignClassName = currentAlignClassName;\n                popupDomNode.className = _this.getClassName(currentAlignClassName);\n            }\n            props.onAlign(popupDomNode, align);\n        };\n        _this.getTarget = function () {\n            return _this.props.getRootDomNode();\n        };\n        _this.savePopupRef = saveRef.bind(_this, 'popupInstance');\n        _this.saveAlignRef = saveRef.bind(_this, 'alignInstance');\n        return _this;\n    }\n\n    _createClass(Popup, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.rootNode = this.getPopupDomNode();\n        }\n    }, {\n        key: 'getPopupDomNode',\n        value: function getPopupDomNode() {\n            return ReactDOM.findDOMNode(this.popupInstance);\n        }\n    }, {\n        key: 'getMaskTransitionName',\n        value: function getMaskTransitionName() {\n            var props = this.props;\n            var transitionName = props.maskTransitionName;\n            var animation = props.maskAnimation;\n            if (!transitionName && animation) {\n                transitionName = props.prefixCls + '-' + animation;\n            }\n            return transitionName;\n        }\n    }, {\n        key: 'getTransitionName',\n        value: function getTransitionName() {\n            var props = this.props;\n            var transitionName = props.transitionName;\n            if (!transitionName && props.animation) {\n                transitionName = props.prefixCls + '-' + props.animation;\n            }\n            return transitionName;\n        }\n    }, {\n        key: 'getClassName',\n        value: function getClassName(currentAlignClassName) {\n            return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;\n        }\n    }, {\n        key: 'getPopupElement',\n        value: function getPopupElement() {\n            var savePopupRef = this.savePopupRef,\n                props = this.props;\n            var align = props.align,\n                style = props.style,\n                visible = props.visible,\n                prefixCls = props.prefixCls,\n                destroyPopupOnHide = props.destroyPopupOnHide;\n\n            var className = this.getClassName(this.currentAlignClassName || props.getClassNameFromAlign(align));\n            var hiddenClassName = prefixCls + '-hidden';\n            if (!visible) {\n                this.currentAlignClassName = null;\n            }\n            var newStyle = _extends({}, style, this.getZIndexStyle());\n            var popupInnerProps = {\n                className: className,\n                prefixCls: prefixCls,\n                ref: savePopupRef,\n                style: newStyle\n            };\n            if (destroyPopupOnHide) {\n                return React.createElement(\n                    Animate,\n                    { component: '', exclusive: true, transitionAppear: true, onAnimateLeave: props.onAnimateLeave, transitionName: this.getTransitionName() },\n                    visible ? React.createElement(\n                        Align,\n                        { target: this.getTarget, key: 'popup', ref: this.saveAlignRef, monitorWindowResize: true, align: align, onAlign: this.onAlign },\n                        React.createElement(\n                            PopupInner,\n                            _extends({ visible: true }, popupInnerProps),\n                            props.children\n                        )\n                    ) : null\n                );\n            }\n            var alignOtherProps = {\n                xVisible: visible\n            };\n            return React.createElement(\n                Animate,\n                { component: '', exclusive: true, transitionAppear: true, transitionName: this.getTransitionName(), onAnimateLeave: props.onAnimateLeave, showProp: 'xVisible' },\n                React.createElement(\n                    Align,\n                    _extends({ target: this.getTarget, key: 'popup', ref: this.saveAlignRef, monitorWindowResize: true }, alignOtherProps, { childrenProps: { visible: 'xVisible' }, disabled: !visible, align: align, onAlign: this.onAlign }),\n                    React.createElement(\n                        PopupInner,\n                        _extends({ hiddenClassName: hiddenClassName }, popupInnerProps),\n                        props.children\n                    )\n                )\n            );\n        }\n    }, {\n        key: 'getZIndexStyle',\n        value: function getZIndexStyle() {\n            var style = {};\n            var props = this.props;\n            if (props.zIndex !== undefined) {\n                style.zIndex = props.zIndex;\n            }\n            return style;\n        }\n    }, {\n        key: 'getMaskElement',\n        value: function getMaskElement() {\n            var props = this.props;\n            var maskElement = void 0;\n            if (props.mask) {\n                var maskTransition = this.getMaskTransitionName();\n                maskElement = React.createElement(LazyRenderBox, { style: this.getZIndexStyle(), key: 'mask', className: props.prefixCls + '-mask', hiddenClassName: props.prefixCls + '-mask-hidden', visible: props.visible });\n                if (maskTransition) {\n                    maskElement = React.createElement(\n                        Animate,\n                        { key: 'mask', showProp: 'visible', transitionAppear: true, component: '', transitionName: maskTransition },\n                        maskElement\n                    );\n                }\n            }\n            return maskElement;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return React.createElement(\n                'div',\n                null,\n                this.getMaskElement(),\n                this.getPopupElement()\n            );\n        }\n    }]);\n\n    return Popup;\n}(Component);\n\nexport default Popup;"]},"metadata":{},"sourceType":"module"}